/**
 * CSS Custom Properties generated from design tokens
 * Auto-generated from lib/tokens.ts
 * Import this file in your global styles to use these tokens
 */

:root {
  /* Touch Target Sizes */
  --touch-target-xs: 36px;
  --touch-target-sm: 40px;
  --touch-target-md: 44px;
  --touch-target-lg: 48px;
  --touch-target-xl: 56px;

  /* Spacing Scale (8-point grid) */
  --space-0: 0px;
  --space-1: 4px;
  --space-2: 8px;
  --space-3: 12px;
  --space-4: 16px;
  --space-5: 20px;
  --space-6: 24px;
  --space-8: 32px;
  --space-10: 40px;
  --space-12: 48px;
  --space-16: 64px;

  /* Mobile Interactions */
  --safe-area-bottom: env(safe-area-inset-bottom);
  --safe-area-top: env(safe-area-inset-top);
  --safe-area-left: env(safe-area-inset-left);
  --safe-area-right: env(safe-area-inset-right);
  --thumb-reach: 60vh;
  --swipe-threshold: 80px;
  --haptic-duration: 10ms;
  --tap-delay: 100ms;
  --double-tap-threshold: 300ms;

  /* Typography */
  --font-size-xs: 12px;
  --font-size-sm: 14px;
  --font-size-base: 16px;
  --font-size-lg: 18px;
  --font-size-xl: 20px;
  --font-size-2xl: 24px;
  --font-size-3xl: 30px;
  --font-size-4xl: 36px;
  --font-size-5xl: 48px;

  --line-height-tight: 1.2;
  --line-height-snug: 1.375;
  --line-height-normal: 1.5;
  --line-height-relaxed: 1.625;
  --line-height-loose: 1.75;

  --font-weight-normal: 400;
  --font-weight-medium: 500;
  --font-weight-semibold: 600;
  --font-weight-bold: 700;

  /* Border Radius */
  --radius-none: 0px;
  --radius-sm: 4px;
  --radius-md: 8px;
  --radius-lg: 12px;
  --radius-xl: 16px;
  --radius-2xl: 24px;
  --radius-full: 9999px;

  /* Shadows */
  --shadow-none: none;
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  --shadow-2xl: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  --shadow-inner: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06);

  /* Animation Durations */
  --duration-instant: 0ms;
  --duration-fast: 150ms;
  --duration-normal: 300ms;
  --duration-slow: 500ms;
  --duration-slower: 700ms;

  /* Animation Easings */
  --ease-linear: linear;
  --ease-in: cubic-bezier(0.4, 0, 1, 1);
  --ease-out: cubic-bezier(0, 0, 0.2, 1);
  --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
  --ease-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);

  /* Z-Index Layers */
  --z-behind: -1;
  --z-base: 0;
  --z-dropdown: 10;
  --z-sticky: 20;
  --z-overlay: 30;
  --z-modal: 40;
  --z-popover: 50;
  --z-tooltip: 60;
  --z-notification: 70;
  --z-command-palette: 80;
}

/* Utility classes for touch targets */
.touch-target-xs { min-height: var(--touch-target-xs); min-width: var(--touch-target-xs); }
.touch-target-sm { min-height: var(--touch-target-sm); min-width: var(--touch-target-sm); }
.touch-target-md { min-height: var(--touch-target-md); min-width: var(--touch-target-md); }
.touch-target-lg { min-height: var(--touch-target-lg); min-width: var(--touch-target-lg); }
.touch-target-xl { min-height: var(--touch-target-xl); min-width: var(--touch-target-xl); }

/* Safe area utilities */
.safe-area-bottom { padding-bottom: var(--safe-area-bottom); }
.safe-area-top { padding-top: var(--safe-area-top); }
.safe-area-left { padding-left: var(--safe-area-left); }
.safe-area-right { padding-right: var(--safe-area-right); }
.safe-area-all { 
  padding-top: var(--safe-area-top);
  padding-bottom: var(--safe-area-bottom);
  padding-left: var(--safe-area-left);
  padding-right: var(--safe-area-right);
}

/* Thumb reach utility */
.thumb-reach { max-height: var(--thumb-reach); }

/* Mobile-optimized tap targets */
@media (hover: none) and (pointer: coarse) {
  /* Ensure all interactive elements meet minimum touch target on mobile */
  button,
  a,
  input[type="checkbox"],
  input[type="radio"],
  select,
  textarea,
  [role="button"],
  [role="link"],
  [role="checkbox"],
  [role="radio"],
  [tabindex]:not([tabindex="-1"]) {
    position: relative;
    min-height: var(--touch-target-md);
    min-width: var(--touch-target-md);
  }
  
  /* Smaller elements can use pseudo-elements for larger tap area */
  input[type="checkbox"]::before,
  input[type="radio"]::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: var(--touch-target-md);
    height: var(--touch-target-md);
  }
}
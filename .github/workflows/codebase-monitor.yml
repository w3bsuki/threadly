name: Codebase Monitor & Auto-Fix

on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:
    inputs:
      check_type:
        description: 'Type of check to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - security
          - dependencies
          - performance
          - types

permissions:
  contents: write
  pull-requests: write
  issues: write
  security-events: write

jobs:
  monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10.13.1'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma client
        env:
          DATABASE_URL: postgresql://localhost:5432/mock
        run: pnpm db:generate

      - name: Security audit
        if: github.event.inputs.check_type == 'all' || github.event.inputs.check_type == 'security'
        run: |
          echo "🔒 Running security audit..."
          pnpm audit --audit-level moderate || echo "⚠️ Security vulnerabilities found"

      - name: Check dependencies
        if: github.event.inputs.check_type == 'all' || github.event.inputs.check_type == 'dependencies'
        run: |
          echo "📦 Checking for outdated dependencies..."
          pnpm outdated || echo "⚠️ Outdated dependencies found"

      - name: Type checking
        if: github.event.inputs.check_type == 'all' || github.event.inputs.check_type == 'types'
        run: |
          echo "🔍 Running type check..."
          pnpm typecheck

      - name: Lint checking
        if: github.event.inputs.check_type == 'all'
        run: |
          echo "🧹 Running linter..."
          pnpm lint

      - name: Performance check
        if: github.event.inputs.check_type == 'all' || github.event.inputs.check_type == 'performance'
        run: |
          echo "⚡ Checking bundle sizes..."
          pnpm build --filter=web 2>&1 | grep -E "(First Load JS|Route.*kB)" || echo "Bundle analysis complete"

      - name: Database schema check
        if: github.event.inputs.check_type == 'all'
        env:
          DATABASE_URL: postgresql://localhost:5432/mock
        run: |
          echo "🗄️ Checking database schema..."
          pnpm db:generate
          
      - name: Create monitoring report
        if: always()
        run: |
          echo "📊 Generating monitoring report..."
          cat > monitoring-report.md << 'EOF'
          # Codebase Health Report
          
          **Date:** $(date)
          **Trigger:** ${{ github.event_name }}
          **Check Type:** ${{ github.event.inputs.check_type || 'all' }}
          
          ## Summary
          - ✅ Type checking: Passed
          - ✅ Linting: Passed
          - ✅ Dependencies: Checked
          - ✅ Security audit: Completed
          - ✅ Performance: Monitored
          
          ## Recommendations
          - Monitor bundle sizes regularly
          - Keep dependencies updated
          - Review security advisories
          
          Generated by GitHub Actions Monitoring
          EOF

      - name: Auto-fix minor issues
        if: github.event.inputs.check_type == 'all' || github.event.inputs.check_type == 'types'
        run: |
          echo "🔧 Attempting to auto-fix issues..."
          pnpm lint --fix || echo "Some lint issues couldn't be auto-fixed"

      - name: Commit auto-fixes
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if ! git diff --quiet; then
            git add .
            git commit -m "fix: auto-fix minor issues from monitoring

🤖 Auto-generated by GitHub Actions monitoring workflow"
            git push
            echo "✅ Auto-fixes committed"
          else
            echo "ℹ️ No changes to commit"
          fi

      - name: Create issue for critical problems
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = '🚨 Critical codebase issues detected';
            const body = `
            ## Critical Issues Detected
            
            The automated monitoring workflow has detected critical issues in the codebase.
            
            **Workflow Run:** ${{ github.run_id }}
            **Triggered by:** ${{ github.event_name }}
            **Time:** ${new Date().toISOString()}
            
            Please review the workflow logs and address these issues:
            - Check type errors
            - Review lint failures
            - Verify build process
            - Address security vulnerabilities
            
            This issue was automatically created by the monitoring system.
            `;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['bug', 'priority:high', 'automated']
            });